# {{ ansible_managed }}

# general settings
data_directory = '{{ postgresql__data_directory }}'
hba_file = '{{ postgresql__hba_file }}'
ident_file = '{{ postgresql__ident_file }}'
external_pid_file = '{{ postgresql__external_pid_file }}'
listen_addresses = '{{ postgresql__listen_addresses | join(',')}}'
port = {{ postgresql__port }}
superuser_reserved_connections = {{ postgresql__superuser_reserved_connections }}
unix_socket_directories = '{{ postgresql__unix_socket_directories }}'
unix_socket_group = '{{ postgresql__unix_socket_group }}'
unix_socket_permissions = {{ postgresql__unix_socket_permissions }}
bonjour = {{ postgresql__bonjour }}
bonjour_name = '{{ postgresql__bonjour_name }}'

# TCP
tcp_keepalives_idle = {{ postgresql__tcp_keepalives_idle }}
tcp_keepalives_interval = {{ postgresql__tcp_keepalives_interval }}
tcp_keepalives_count = {{ postgresql__tcp_keepalives_count }}
{% if (postgresql__version|int) >= 12 %}
tcp_user_timeout = {{ postgresql__tcp_user_timeout }}
{% endif %}

# Auth
authentication_timeout = {{ postgresql__authentication_timeout_sec }}s
password_encryption = {{ postgresql__password_encryption }}
db_user_namespace = {{ postgresql__db_user_namespace }}

# GSSAPI using Kerberos
krb_server_keyfile = '{{ postgresql__krb_server_keyfile }}'
krb_caseins_users = '{{ postgresql__krb_caseins_users }}'

# SSL
ssl = {{ postgresql__ssl }}
ssl_ca_file = '{{ postgresql__ssl_ca_file }}'
ssl_cert_file = '{{ postgresql__ssl_cert_file }}'
ssl_crl_file = '{{ postgresql__ssl_crl_file }}'
ssl_key_file = '{{ postgresql__ssl_key_file }}'
ssl_ciphers = '{{ postgresql__ssl_ciphers }}'
ssl_prefer_server_ciphers = {{ postgresql__ssl_prefer_server_ciphers }}
ssl_ecdh_curve = '{{ postgresql__ssl_ecdh_curve }}'
{% if (postgresql__version|int) >= 12 %}
ssl_min_protocol_version = '{{ postgresql__ssl_min_protocol_version }}'
ssl_max_protocol_version = '{{ postgresql__ssl_max_protocol_version }}'
{% endif %}
ssl_dh_params_file = '{{ postgresql__ssl_dh_params_file }}'
ssl_passphrase_command = '{{ postgresql__ssl_passphrase_command }}'
ssl_passphrase_command_supports_reload = {{ postgresql__ssl_passphrase_command_supports_reload }}

# query tuning
random_page_cost = {{ postgresql__random_page_cost }}

# Memory
work_mem = {{ postgresql__work_mem_kb }}kB
{% if postgresql__shared_buffers_percent is defined and postgresql__shared_buffers_percent | string | length %}
shared_buffers = {{ (postgresql__shared_buffers_percent*ansible_memtotal_mb*1024/100)|round|int }}kB
{% else %}
shared_buffers = {{ postgresql__shared_buffers_kb }}kB
{% endif %}
max_connections = {{ postgresql__max_connections }}
huge_pages = {{ postgresql__huge_pages }}
temp_buffers = {{ postgresql__temp_buffers_kb }}kB
max_prepared_transactions = {{ postgresql__max_prepared_transactions }}
{% if (postgresql__version | int) >= 13 %}
hash_mem_multiplier = {{ postgresql__hash_mem_multiplier }}
{% endif %}
maintenance_work_mem = {{ postgresql__maintenance_work_mem_kb }}kB
autovacuum_work_mem = {{ postgresql__autovacuum_work_mem_kb if postgresql__autovacuum_work_mem_kb == -1 else (postgresql__autovacuum_work_mem_kb | string) + 'kB' }}
{% if (postgresql__version | int) >= 13 %}
logical_decoding_work_mem = {{ postgresql__logical_decoding_work_mem_kb }}kB
{% endif %}
max_stack_depth = {{ postgresql__max_stack_depth_kb }}kB
{% if (postgresql__version | int) >= 12 %}
shared_memory_type = {{ postgresql__shared_memory_type }}
{% endif %}
dynamic_shared_memory_type = {{ postgresql__dynamic_shared_memory_type }}

# checkpoints
max_wal_size = {{ postgresql__max_wal_size_kb }}kB
min_wal_size = {{ postgresql__min_wal_size_kb }}kB

# log
log_line_prefix = '{{ postgresql__log_line_prefix }}'
log_timezone = '{{ postgresql__log_timezone }}'

# process title
cluster_name = '{{ postgresql__cluster_name }}'

# statistics
stats_temp_directory = '{{ postgresql__stats_temp_directory }}'

# client defaults
datestyle = '{{ postgresql__datestyles | join(',') }}'
intervalstyle = '{{ postgresql__intervalstyle }}'
timezone = '{{ postgresql__timezone }}'
lc_messages = '{{ postgresql__lc_messages }}'
lc_monetary = '{{ postgresql__lc_monetary }}'
lc_numeric = '{{ postgresql__lc_numeric }}'
lc_time = '{{ postgresql__lc_time }}'
default_text_search_config = '{{ postgresql__default_text_search_config }}'

# config includes
include_dir = '{{ postgresql__include_dir }}'
{% for postgresql__include_if_exists in postgresql__includes_if_exists %}
include_if_exists = '{{ postgresql__include_if_exists }}'
{% endfor %}
